project: LLMs_OS_Test_LLMs_CLI
  idea: "Công cụ CLI mô phỏng quy trình làm việc LLM với API key giả lập."
  requirements:
    - "Chạy các tác vụ được định nghĩa trong file YAML."
    - "Hỗ trợ các 'action' có thể mở rộng."
    - "Mô phỏng tương tác với LLM (ví dụ: OpenRouter) mà không cần API key thực."
    - "Đóng gói dưới dạng Docker image nhẹ."
    - "Cung cấp CLI để thực thi script."
  architecture:
    description: "Ứng dụng Python với cấu trúc module, hệ thống đăng ký action, và CLI."
    components:
      - name: "registry.py"
        function: "Đăng ký và quản lý các 'action'."
      - name: "core.py"
        function: "Tải action, render template Jinja2, và thực thi script YAML."
      - name: "cli.py"
        function: "Điểm vào CLI, xử lý đối số và gọi core.py."
      - name: "actions/"
        function: "Thư mục chứa các action cụ thể (ví dụ: print_message, chat_completion)."
      - name: "setup.py"
        function: "Cấu hình package Python, dependency và entry point."
  dockerfile_explanation:
    file_name: "Dockerfile.llms-os-test-llms"
    purpose: "Xây dựng Docker image cho công cụ CLI LLMs_OS, mô phỏng tương tác LLM."
    sections:
      - name: "FROM"
        command: "FROM python:3.14.0b3-alpine3.21"
        explanation: "Sử dụng image Python 3.14.0b3 trên Alpine Linux 3.21 làm nền tảng, giúp image nhẹ."
      - name: "LABEL"
        command: "LABEL maintainer=... LABEL description=..."
        explanation: "Thêm siêu dữ liệu về người duy trì và mô tả image."
      - name: "WORKDIR"
        command: "WORKDIR /app"
        explanation: "Đặt thư mục làm việc mặc định trong container là /app."
      - name: "Project Structure"
        command: "RUN mkdir -p ... && touch ..."
        explanation: "Tạo cấu trúc thư mục và file __init__.py cần thiết cho package Python LLMs_OS."
      - name: "registry.py"
        command: "RUN printf ... > /app/LLMs_OS/registry.py"
        explanation: "Tạo file registry.py để quản lý việc đăng ký và truy xuất các action."
      - name: "core.py"
        command: "RUN printf ... > /app/LLMs_OS/core.py"
        explanation: "Tạo file core.py chứa logic chính: tải action, render template Jinja2, và thực thi các script YAML theo từng task."
      - name: "cli.py"
        command: "RUN printf ... > /app/LLMs_OS/cli.py"
        explanation: "Tạo file cli.py làm điểm vào cho công cụ dòng lệnh, xử lý đối số và gọi core.py để thực thi script YAML."
      - name: "setup.py"
        command: "RUN printf ... > /app/setup.py"
        explanation: "Tạo file setup.py để cấu hình package LLMs_OS, định nghĩa các dependency và entry point 'llms-os'."
      - name: "Action: print_message"
        command: "RUN printf ... > /app/LLMs_OS/actions/print_message.py"
        explanation: "Tạo một action mẫu 'print_message' để in thông báo, minh họa cách mở rộng hệ thống."
      - name: "Action: chat_completion (simulated)"
        command: "RUN printf ... > /app/LLMs_OS/actions/chat_completion.py"
        explanation: "Tạo một action 'chat_completion' giả lập tương tác với LLM. Nó kiểm tra sự tồn tại của biến môi trường OPENROUTER_API_KEY và đưa ra phản hồi giả lập."
      - name: "Sample Script: test_llm.yaml"
        command: "RUN printf ... > /app/test_llm.yaml"
        explanation: "Tạo một script YAML mẫu để kiểm tra action 'chat_completion' giả lập với các thông số mô hình và tin nhắn."
      - name: "ENV OPENROUTER_API_KEY"
        command: "ENV OPENROUTER_API_KEY='sk-or-testkey1234567890'"
        explanation: "Đặt biến môi trường OPENROUTER_API_KEY với một giá trị giả lập để action chat_completion có thể hoạt động."
      - name: "Install Tool"
        command: "RUN pip install --no-cache-dir -e /app"
        explanation: "Cài đặt package LLMs_OS ở chế độ editable, bao gồm các dependency, giúp ứng dụng sẵn sàng chạy."
      - name: "ENTRYPOINT & CMD"
        command: "ENTRYPOINT ['llms-os'] CMD ['test_llm.yaml']"
        explanation: "Cấu hình container để tự động chạy lệnh 'llms-os test_llm.yaml' khi khởi động, thực thi script YAML mẫu."
    overall_purpose: "Dockerfile này xây dựng một môi trường độc lập để phát triển, kiểm thử và mô phỏng các quy trình làm việc sử dụng LLM, đặc biệt hữu ích cho việc kiểm thử logic ứng dụng mà không cần kết nối API LLM thực tế."